library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;
use ieee.math_real.all;

library work;
use work.constants.all;

entity SPI_tb is
end SPI_tb;

architecture Behavioral of SPI is

	COMPONENT SPI
		Port ( 	
		i_CLK : in  STD_LOGIC; -- Clock input
		-- SPI I/O
		i_SCLK : in  STD_LOGIC; -- SPI serial clock
		i_MOSI : in  STD_LOGIC; -- SPI master out slave in
		i_SSEL : in  STD_LOGIC; -- SPI slave select
		o_MISO : out  STD_LOGIC; -- SPI master in slave out
		-- Registers
		i_DATA1 : in  STD_LOGIC_VECTOR(CALC_WIDTH-1 downto 0);
		i_DATA2 : in  STD_LOGIC_VECTOR(CALC_WIDTH-1 downto 0);
		i_DATA3 : in  STD_LOGIC_VECTOR(CALC_WIDTH-1 downto 0);
		i_DATA4 : in  STD_LOGIC_VECTOR(CALC_WIDTH-1 downto 0);
		i_DATA5 : in  STD_LOGIC_VECTOR(CALC_WIDTH-1 downto 0);
		i_DATA6 : in  STD_LOGIC_VECTOR(CALC_WIDTH-1 downto 0);
		i_NEW_DATA : in  STD_LOGIC;
		-- Status signals
		o_ADDRESS_received : out STD_LOGIC
	);
	end COMPONENT SPI;
	
	signal i_CLK : STD_LOGIC; -- Clock input
	-- SPI I/O
	signal i_SCLK : STD_LOGIC; -- SPI serial clock
	signal i_MOSI : STD_LOGIC; -- SPI master out slave in
	signal i_SSEL : STD_LOGIC; -- SPI slave select
	signal o_MISO : STD_LOGIC; -- SPI master in slave out
	-- Registers
	signal i_DATA1 : STD_LOGIC_VECTOR(CALC_WIDTH-1 downto 0);
	signal i_DATA2 : STD_LOGIC_VECTOR(CALC_WIDTH-1 downto 0);
	signal i_DATA3 : STD_LOGIC_VECTOR(CALC_WIDTH-1 downto 0);
	signal i_DATA4 : STD_LOGIC_VECTOR(CALC_WIDTH-1 downto 0);
	signal i_DATA5 : STD_LOGIC_VECTOR(CALC_WIDTH-1 downto 0);
	signal i_DATA6 : STD_LOGIC_VECTOR(CALC_WIDTH-1 downto 0);
	signal i_NEW_DATA : STD_LOGIC;
	-- Status signals
	signal o_ADDRESS_received : STD_LOGIC;


begin

	UUT : SPI
   Port map ( 	
		i_CLK => i_CLK,
		i_SCLK => i_SCLK,
		i_MOSI => i_MOSI,
		i_SSEL => i_SSEL,
		o_MISO => o_MISO,
		i_DATA1 => i_DATA1,
		i_DATA2 => i_DATA2,
		i_DATA3 => i_DATA3,
		i_DATA4 => i_DATA4,
		i_DATA5 => i_DATA5,
		i_DATA6 => i_DATA6,
		i_NEW_DATA => i_NEW_DATA,
		o_ADDRESS_received => o_ADDRESS_received
	 );
	 
	 

			

end Behavioral;